Source: vips7.10
Section: libs
Priority: optional
Build-Depends: cdbs, debhelper (>= 4.1.0), libjpeg62-dev, libtiff4-dev, zlib1g-dev, fftw3-dev, liblcms1-dev, libpng12-dev, libmagick6-dev, libfreetype6-dev, libpango1.0-dev, libfontconfig1-dev, libglib2.0-dev, libice-dev, gettext, pkg-config
Maintainer: Jay Berkenbilt <ejb@ql.org>
Standards-Version: 3.6.1

Package: libvips7.10
Section: libs
Architecture: any
Depends: ${shlibs:Depends}
Provides: libvips
Recommends: nip2
Conflicts: libvips7.8
Description: image processing system good for very large images
 VIPS is an image processing system designed with efficiency in mind.
 It is good with large images (images larger than the amount of RAM in
 your machine), and for working with colour.  It can perform many
 image manipulation tasks much faster than other packages such as
 ImageMagick and the GIMP and includes some special features such as
 creating single "mosaic" images from multiple parts.
 .
 VIPS consists of two main components: an image processing library
 with some command-line tools and a spreadsheet-like graphical user
 interface.  The graphical interface is available in the nip2 package.
 .
 This package includes runtime libraries needed to run applications
 linked with the vips library.

Package: libvips7.10-dev
Section: libdevel
Architecture: any
Depends: libvips7.10 (= ${Source-Version})
Provides: libvips-dev
Recommends: libvips7.10-doc, libvips7.10-tools
Suggests: nip2
Conflicts: libvips7.8-dev
Description: image processing system good for very large images (dev)
 VIPS is an image processing system designed with efficiency in mind.
 It is good with large images (images larger than the amount of RAM in
 your machine), and for working with colour.  It can perform many
 image manipulation tasks much faster than other packages such as
 ImageMagick and the GIMP and includes some special features such as
 creating single "mosaic" images from multiple parts.
 .
 VIPS consists of two main components: an image processing library
 with some command-line tools and a spreadsheet-like graphical user
 interface.  The graphical interface is available in the nip2 package.
 .
 This package includes all development files needed to compile
 applications that use the vips library.

Package: libvips7.10-tools
Architecture: any
Depends: ${shlibs:Depends}
Provides: libvips-tools
Recommends: nip2, libvips7.10-doc
Suggests: libvips7.10-dev
Conflicts: libvips7.8-tools
Description: image processing system good for very large images (tools)
 VIPS is an image processing system designed with efficiency in mind.
 It is good with large images (images larger than the amount of RAM in
 your machine), and for working with colour.  It can perform many
 image manipulation tasks much faster than other packages such as
 ImageMagick and the GIMP and includes some special features such as
 creating single "mosaic" images from multiple parts.
 .
 VIPS consists of two main components: an image processing library
 with some command-line tools and a spreadsheet-like graphical user
 interface.  The graphical interface is available in the nip2 package.
 .
 This package includes several command-line utilities that make it
 possible to use some vips functionality from shell scripts or the
 command line.

Package: libvips7.10-doc
Section: doc
Architecture: all
Provides: libvips-doc
Description: image processing system good for very large images (doc)
 VIPS is an image processing system designed with efficiency in mind.
 It is good with large images (images larger than the amount of RAM in
 your machine), and for working with colour.  It can perform many
 image manipulation tasks much faster than other packages such as
 ImageMagick and the GIMP and includes some special features such as
 creating single "mosaic" images from multiple parts.
 .
 VIPS consists of two main components: an image processing library
 with some command-line tools and a spreadsheet-like graphical user
 interface.  The graphical interface is available in the nip2 package.
 .
 This package includes complete documentation for the VIPS system.  It
 includes the application programmers' guide, the library programmers'
 guide, the C++ programmers' guide, and the reference guide, as well
 as HTML versions of the program and library manual pages.
