#!/usr/bin/make -f

# To distinguish variables that are truly local to this file (rather
# than for use by cdbs), we adopt the convention of starting local
# variables' names with l_.

l_PWD := $(shell pwd)
l_STAMPS = debian/l_stamps

# Variables used by cdbs

VERSION := $(shell dpkg-parsechangelog | \
             awk '/Version:/ {print $$2}' | cut -d- -f 1)

DEB_TAR_SRCDIR = vips-$(VERSION)
DEB_INSTALL_DIRS_libvips10c2a = /usr/lib /usr/share/man
DEB_INSTALL_DIRS_libvips10-dev = /usr /usr/lib /usr/share/man
DEB_INSTALL_DIRS_libvips-tools = /usr/bin
DEB_INSTALL_DOCS_libvips-doc = \
	$(DEB_BUILDDIR)/doc/html
DEB_COMPRESS_EXCLUDE = html

# Include cdbs rules files.
include /usr/share/cdbs/1/rules/tarball.mk
#include /usr/share/cdbs/1/rules/simple-patchsys.mk
include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/class/autotools.mk

# "make install" runs installed programs at one point, so we need to
# set LD_LIBRARY_PATH to the installed library directory.
ifeq ("$(LD_LIBRARY_PATH)", "")
LD_LIBRARY_PATH=$(l_PWD)/debian/tmp/usr/lib
else
LD_LIBRARY_PATH += :$(l_PWD)/debian/tmp/usr/lib
endif
export LD_LIBRARY_PATH

cleanbuilddir::
	$(RM) -r $(l_STAMPS)

# As 0.4.21, cdbs creates but doesn't remove debian/compat.  It
# creates it conditionally, so this doesn't have a trivial fix.
clean::
	$(RM) debian/compat *.cdbs-config_list

pre-build::
	find build-tree -name CVS -print | xargs rm -rf

install/libvips-tools::
	rm debian/tmp/usr/bin/im_*
	rm debian/tmp/usr/bin/header
	rm debian/tmp/usr/share/man/man1/header.1*
	rm debian/tmp/usr/lib/python*/site-packages/vipsCC/*.pyc
	rm debian/tmp/usr/lib/python*/site-packages/vipsCC/*.pyo
	perl $(l_PWD)/debian/scripts/create_missing_manual_pages

# Install lintian override files
binary-post-install/%::
	if [ -f debian/$*.lintian ]; then \
	    mkdir -p debian/$*/usr/share/lintian/overrides && \
	    cp -p debian/$*.lintian debian/$*/usr/share/lintian/overrides/$*; \
	fi

binary-install/vipscc-python:
	dh_pycentral -p$(cdbs_curpkg)
